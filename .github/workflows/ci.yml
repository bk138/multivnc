name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-24.04
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Check translations
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: |
          for f in po/*.po; do grep -LE '^msgid "translator-credits"' $f ; done
      - name: Install Ubuntu Build Dependencies
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: |
          sudo apt update
          sudo apt install gettext libwxgtk3.2-dev libgtk-3-dev libgcrypt20-dev liblzo2-dev
      - name: Install MacOS Build Dependencies
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install wxwidgets coreutils autoconf automake libtool
      - name: Install Windows Build Dependencies
        if: ${{ matrix.os == 'windows-latest' }}
        uses: johnwason/vcpkg-action@v6
        id: vcpkg
        with:
          pkgs: wxwidgets gettext[tools]
          triplet: x64-windows
          token: ${{ github.token }}
      - name: Install Windows Build Tools
        if: ${{ matrix.os == 'windows-latest' }}
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            autotools git
      - name: Prepare LibreSSL for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        shell: msys2 {0}
        run: |
          git config --global core.autocrlf false
          ./prepareLibreSSL.sh
      - name: Prepare LibreSSL for Ubuntu or MacOS
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          ./prepareLibreSSL.sh
      - name: Build
        run: |
          mkdir build
          cd build
          cmake ${{ steps.vcpkg.outputs.vcpkg-cmake-config }} ..
          cmake --build .
          cpack -V -C Debug
      - name: Archive Ubuntu Build Artifacts
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        uses: actions/upload-artifact@v3
        with:
          name: MultiVNC Debian Package
          path: build/*.deb
      - name: Archive MacOS Build Artifacts
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: MultiVNC MacOS Package
          path: build/*.dmg
      - name: Archive Windows Build Artifacts
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: MultiVNC Windows Package
          path: build/*.exe
