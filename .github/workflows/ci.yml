name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-24.04
          - macos-latest
          - windows-latest
        include:
          - os: windows-latest
            cmake_options: "-DwxWidgets_ROOT_DIR=C:/wx"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Check translations
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: |
          for f in po/*.po; do grep -LE '^msgid "translator-credits"' $f ; done
      - name: Install Ubuntu Build Dependencies
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: |
          sudo apt update
          sudo apt install gettext libwxgtk3.2-dev libgtk-3-dev libgcrypt20-dev liblzo2-dev
      - name: Install MacOS Build Dependencies
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew uninstall --ignore-dependencies gnutls libgcrypt
          brew install wxwidgets@3.2
      - name: Install Windows Build Dependencies
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          # nsis, for CPack
          choco install nsis
          # gettext
          curl -L -o gettext.zip https://github.com/mlocati/gettext-iconv-windows/releases/download/v0.26-v1.17/gettext0.26-iconv1.17-static-64.zip
          7z x gettext.zip -o"C:/gettext"
          echo "C:/gettext/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          # Download and extract wxWidgets
          curl -L -o wxWidgets.7z https://github.com/wxWidgets/wxWidgets/releases/download/v3.2.8/wxMSW-3.2.8_vc14x_x64_Dev.7z
          7z x wxWidgets.7z -o"C:/wx" -y
          curl -L -o wxHeaders.7z https://github.com/wxWidgets/wxWidgets/releases/download/v3.2.8/wxWidgets-3.2.8-headers.7z
          7z x wxHeaders.7z -o"C:/wx" -y
      - name: Build
        run: |
          mkdir build
          cd build
          cmake ${{ matrix.cmake_options }} ..
          cmake --build .
          cpack -V -C Debug
      - name: Archive Ubuntu Build Artifacts
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        uses: actions/upload-artifact@v4
        with:
          name: MultiVNC Debian Package
          path: build/*.deb
      - name: Archive MacOS Build Artifacts
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: MultiVNC MacOS Package
          path: build/*.dmg
      - name: Archive Windows Build Artifacts
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: MultiVNC Windows Package
          path: build/*.exe
